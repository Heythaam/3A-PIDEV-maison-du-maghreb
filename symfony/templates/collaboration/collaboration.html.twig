{% extends 'base1.html.twig' %}

{% block title %}Collaboration Hub{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link href="https://cdn.jsdelivr.net/npm/@sweetalert2/theme-material-ui/material-ui.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" rel="stylesheet">
    <style>
        /* Layout Adjustment */
        .dashboard-container {
            padding: 2rem;
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            margin-left: 280px;
            width: calc(100% - 280px);
            min-height: 100vh;
            position: relative;
            top: 0;
            overflow-x: hidden;
        }

        /* Stats Cards */
        .stats-row {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2.5rem;
        }

        .stats-card {
            background: white;
            border-radius: 20px;
            padding: 1.5rem;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
            transition: all 0.3s ease;
            border: 1px solid rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
        }

        .stats-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.12);
        }

        .stats-icon {
            width: 50px;
            height: 50px;
            border-radius: 15px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            margin-bottom: 1rem;
            background: linear-gradient(135deg, rgba(107, 115, 255, 0.2) 0%, rgba(0, 13, 255, 0.1) 100%);
        }

        .stats-number {
            font-size: 2rem;
            font-weight: 700;
            background: linear-gradient(135deg, #6B73FF 0%, #000DFF 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            margin-bottom: 0.5rem;
        }

        .stats-label {
            color: #6c757d;
            font-size: 0.9rem;
            font-weight: 500;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        /* Content Card */
        .content-card {
            background: white;
            border-radius: 20px;
            padding: 2rem;
            margin-bottom: 2rem;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
            border: 1px solid rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            max-width: calc(100vw - 310px);
        }

        .table-responsive {
            overflow-x: auto;
            border-radius: 15px;
            scrollbar-width: thin;
            scrollbar-color: #6B73FF #f0f0f0;
        }

        .table-responsive::-webkit-scrollbar {
            height: 8px;
        }

        .table-responsive::-webkit-scrollbar-track {
            background: #f0f0f0;
            border-radius: 4px;
        }

        .table-responsive::-webkit-scrollbar-thumb {
            background: linear-gradient(135deg, #6B73FF 0%, #000DFF 100%);
            border-radius: 4px;
        }

        .table {
            margin-bottom: 0;
            min-width: 1000px;
        }

        .table th {
            color: #495057;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            padding: 1.2rem 1rem;
            background: #f8f9fa;
            border-bottom: 2px solid #e9ecef;
        }

        .table td {
            padding: 1.2rem 1rem;
            vertical-align: middle;
            border-bottom: 1px solid #e9ecef;
            transition: all 0.2s ease;
        }

        .table tbody tr {
            transition: all 0.2s ease;
        }

        .table tbody tr:hover {
            background-color: rgba(107, 115, 255, 0.05);
            transform: scale(1.01);
        }

        .status-badge {
            padding: 0.5rem 1rem;
            border-radius: 50px;
            font-weight: 500;
            font-size: 0.85rem;
            letter-spacing: 0.5px;
            text-transform: uppercase;
        }

        .status-active {
            background: linear-gradient(135deg, rgba(0, 183, 74, 0.1) 0%, rgba(0, 183, 74, 0.2) 100%);
            color: #00b74a;
        }

        .status-finished {
            background: linear-gradient(135deg, rgba(249, 49, 84, 0.1) 0%, rgba(249, 49, 84, 0.2) 100%);
            color: #f93154;
        }

        .status-upcoming {
            background: linear-gradient(135deg, rgba(57, 192, 237, 0.1) 0%, rgba(57, 192, 237, 0.2) 100%);
            color: #39c0ed;
        }

        .btn-action {
            width: 35px;
            height: 35px;
            padding: 0;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            border-radius: 10px;
            transition: all 0.3s ease;
            margin: 0 0.25rem;
            border: none;
        }

        .btn-action:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

        .btn-primary {
            background: linear-gradient(135deg, #6B73FF 0%, #000DFF 100%);
        }

        .btn-danger {
            background: linear-gradient(135deg, #ff6b6b 0%, #ff0000 100%);
        }

        .section-header {
            margin-bottom: 2rem;
        }

        .section-title {
            font-size: 1.75rem;
            font-weight: 700;
            color: #2c3e50;
            margin-bottom: 0.5rem;
            background: linear-gradient(135deg, #2c3e50 0%, #3498db 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .section-subtitle {
            color: #6c757d;
            font-size: 1rem;
            font-weight: 400;
        }

        .entity-image {
            width: 40px;
            height: 40px;
            border-radius: 10px;
            object-fit: cover;
            margin-right: 1rem;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }

        .btn-add {
            background: linear-gradient(135deg, #6B73FF 0%, #000DFF 100%);
            color: white;
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: 12px;
            font-weight: 500;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(107, 115, 255, 0.2);
        }

        .btn-add:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(107, 115, 255, 0.3);
            color: white;
        }

        /* Description cell */
        .description-cell {
            max-width: 250px;
            white-space: normal !important;
            line-height: 1.5;
            color: #6c757d;
        }

        /* Delete Button Animation */
        .btn-delete {
            background: linear-gradient(135deg, #ff6b6b 0%, #ff0000 100%);
            color: white;
            border: none;
            transition: all 0.3s ease;
        }

        .btn-delete:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(255, 0, 0, 0.3);
        }

        /* Custom SweetAlert Styling */
        .swal2-popup {
            border-radius: 20px;
            padding: 2rem;
        }

        .swal2-title {
            font-size: 1.5rem;
            font-weight: 600;
            color: #2c3e50;
        }

        .swal2-html-container {
            font-size: 1.1rem;
            color: #6c757d;
        }

        .swal2-confirm {
            background: linear-gradient(135deg, #ff6b6b 0%, #ff0000 100%) !important;
            border-radius: 12px !important;
            padding: 1rem 2rem !important;
            font-weight: 600 !important;
        }

        .swal2-cancel {
            background: linear-gradient(135deg, #6c757d 0%, #495057 100%) !important;
            border-radius: 12px !important;
            padding: 1rem 2rem !important;
            font-weight: 600 !important;
        }

        /* Pagination Styling */
        .pagination-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1rem;
            background: white;
            border-radius: 0 0 15px 15px;
            border-top: 1px solid #e9ecef;
        }

        .pagination-controls {
            display: flex;
            gap: 0.5rem;
            align-items: center;
        }

        .pagination-button {
            padding: 0.75rem 1rem;
            border-radius: 12px;
            border: none;
            color: #2c3e50;
            background: white;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
            transition: all 0.3s ease;
            font-weight: 500;
            cursor: pointer;
        }

        .pagination-button:hover:not(.disabled) {
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(107, 115, 255, 0.2);
            color: #6B73FF;
        }

        .pagination-button.active {
            background: linear-gradient(135deg, #6B73FF 0%, #000DFF 100%);
            color: white;
            box-shadow: 0 6px 12px rgba(107, 115, 255, 0.3);
        }

        .pagination-button.disabled {
            background: #f8f9fa;
            color: #6c757d;
            cursor: not-allowed;
            box-shadow: none;
        }

        .pagination-info {
            color: #6c757d;
            font-size: 0.9rem;
        }

        .items-per-page {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .items-per-page select {
            padding: 0.5rem;
            border-radius: 8px;
            border: 1px solid #e9ecef;
            background: white;
        }

        .table-row {
            transition: opacity 0.3s ease;
        }

        .table-row.hidden {
            display: none;
        }
    </style>
{% endblock %}

{% block body %}
<div class="dashboard-container">
    <!-- Statistics Section -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="stats-card">
                <div class="stats-icon stats-primary">
                    <i class="bi bi-people-fill"></i>
                </div>
                <div class="stats-number">{{ paginationCollaboration|length }}</div>
                <div class="stats-label">Total Collaborations</div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="stats-card">
                <div class="stats-icon stats-success">
                    <i class="bi bi-lightning-charge-fill"></i>
                </div>
                <div class="stats-number">{{ paginationProjet|filter(p => p.status == 'Active')|length }}</div>
                <div class="stats-label">Active projects</div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="stats-card">
                <div class="stats-icon stats-info">
                    <i class="bi bi-calendar-event-fill"></i>
                </div>
                <div class="stats-number">{{ paginationProjet|filter(p => p.status == 'A venir')|length }}</div>
                <div class="stats-label">Upcoming projects</div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="stats-card">
                <div class="stats-icon stats-warning">
                    <i class="bi bi-check-circle-fill"></i>
                </div>
                <div class="stats-number">{{ paginationProjet|filter(p => p.status == 'Terminé')|length }}</div>
                <div class="stats-label">Completed projects</div>
            </div>
        </div>
    </div>

    <!-- Alerts Section -->
    {% for type, messages in app.flashes %}
        {% for message in messages %}
            <div class="alert alert-{{ type }} alert-dismissible fade show" role="alert">
                <i class="bi {{ type == 'success' ? 'bi-check-circle' : 'bi-exclamation-triangle' }} me-2"></i>
                {{ message }}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        {% endfor %}
    {% endfor %}

    <div class="content-card">
    <div class="section-header d-flex justify-content-between align-items-center">
        <div>
            <h2 class="section-title d-inline-block">Collaborations Project Ratios</h2>
            <p class="section-subtitle">Visualize the ratio of projects per collaboration</p>
        </div>
    </div>

    <canvas id="collaborationChart" width="400" height="200"></canvas>
    </div>

    <!-- Collaborations Section -->
    <div class="content-card">
        <div class="section-header d-flex justify-content-between align-items-center">
            <div>
                <h2 class="section-title d-inline-block">Collaborations</h2>
                <p class="section-subtitle">Manage your partnerships and collaborations</p>
            </div>
            
            <a href="{{ path('predict_budget') }}" class="btn btn-add">
                <i class="bi bi-calendar-minus"></i> Collaboration estimation
            </a>
        </div>
        

        <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr>
                        <th>Image</th>
                        <th>Name</th>
                        <th>Description</th>
                        <th>Duration</th>
                        <th>Budget</th>
                        <th>Location</th>
                        <th>Status</th>
                        <th>Barcode</th>
                        <th>QR Code</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="tableBody">
                    {% for collaboration in paginationCollaboration %}
                        <tr>
                            <td>
                                {% if collaboration.image %}
                                    <img src="{{ asset('uploads/' ~ collaboration.image) }}" 
                                        class="entity-image" 
                                        alt="{{ collaboration.name }}">
                                {% endif %}
                            </td>
                            <td>
                                <div class="d-flex align-items-center">
                                    <span class="fw-bold">{{ collaboration.name }}</span>
                                </div>
                            </td>
                            <td>{{ collaboration.description|slice(0, 50) }}...</td>
                            <td>
                                <div class="d-flex flex-column">
                                    <small class="text-muted">Start: {{ collaboration.startDate|date('d M Y') }}</small>
                                    <small class="text-muted">End: {{ collaboration.endDate|date('d M Y') }}</small>
                                </div>
                            </td>
                            <td>{{ collaboration.budget ? collaboration.budget ~ ' TND' : 'N/A' }}</td>
                            <td>{{ collaboration.location }}</td>
                            <td>
                                <span class="status-badge {{ collaboration.status == 'Active' ? 'status-active' : 
                                                            collaboration.status == 'Terminé' ? 'status-finished' : 
                                                            'status-upcoming' }}">
                                    {{ collaboration.status }}
                                </span>
                            </td>
                            <td>
                                <img src="{{ asset('uploads/barcodes/' ~ collaboration.barcodePath) }}" alt="Barcode for collaboration {{ collaboration.name }}" />
                            </td>
                            <td>
                                <img src="{{ asset('uploads/qrcodes/' ~ collaboration.qrCodePath) }}" alt="QR Code for collaboration {{ collaboration.name }}" />
                            </td>

                            <td>
                                <form method="post" 
                                    action="{{ path('delete_collaboration', {'id': collaboration.id}) }}" 
                                    class="d-inline delete-form"
                                    data-collaboration-name="{{ collaboration.name }}">
                                    <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ collaboration.id) }}">
                                    <button type="button" class="btn btn-action btn-delete delete-collaboration">
                                        <i class="bi bi-trash-fill"></i>
                                    </button>
                                </form>
                                <!-- PDF Export Button -->
                                <br><a href="{{ path('app_collaboration_pdf', {'id': collaboration.id}) }}" 
                                class="btn btn-action btn-success">
                                    <i class="bi bi-filetype-pdf"></i>
                                </a>
                            </td>
                        </tr>
                    {% endfor %}
                    {{ knp_pagination_render(paginationCollaboration) }}
                </tbody>
            </table>
        </div>
</div>

</div>


    </div>

    <!-- paginationProjet Section -->
    <div class="content-card">
        <div class="section-header d-flex justify-content-between align-items-center">
            <div>
                <h2 class="section-title d-inline-block">Projects</h2>
                <p class="section-subtitle">Manage your projects</p>
            </div>
        </div>

        <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr>
                        <th>Title</th>
                        <th>Description</th>
                        <th>Start Date</th>
                        <th>End Date</th>
                        <th>Status</th>
                        <th>Budget</th>
                        <th>Image</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="tableBody">
                    {% for project in paginationProjet %}
                        <tr>
                            <td>{{ project.title }}</td>
                            <td>{{ project.description|slice(0, 50) }}...</td>
                            <td>{{ project.startDate|date('d M Y') }}</td>
                            <td>{{ project.endDate|date('d M Y') }}</td>
                            <td>
                                <span class="status-badge {{ project.status == 'Active' ? 'status-active' : 
                                                            project.status == 'Terminé' ? 'status-finished' : 
                                                            'status-upcoming' }}">
                                    {{ project.status }}
                                </span>
                            </td>
                            <td>{{ project.budget ? project.budget ~ ' TND' : 'N/A' }}</td>
                            <td>
                                {% if project.image %}
                                    <img src="{{ asset('uploads/' ~ project.image) }}" 
                                        class="entity-image" 
                                        alt="{{ project.title }}">
                                {% endif %}
                            </td>
                            <td>
                                <form method="post" 
                                    action="{{ path('delete_projet', {'id': project.id}) }}" 
                                    class="d-inline delete-form"
                                    data-project-title="{{ project.title }}">
                                    <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ project.id) }}">
                                    <button type="button" class="btn btn-action btn-delete delete-project">
                                        <i class="bi bi-trash-fill"></i>
                                    </button>
                                </form>
                            </td>
                        </tr>
                    {% endfor %}
                    {{ knp_pagination_render(paginationProjet) }}
                </tbody>
            </table>
        </div>
    </div>

</div>

<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
<div class="container mt-5">
    <h1 class="mb-4">ChatGPT Chat</h1>
    <div id="chat-box" class="chat-box hidden">
        <div class="chat-header">ChatGPT Bot <span id="close-chat">&times;</span></div>
        <div id="chat-content" class="chat-content"></div>
        <form id="chat-form" action="{{ path('chat_ask') }}" method="post" class="chat-form">
            <input type="text" name="question" id="question" class="form-control" placeholder="Ask a question..." required>
            <button type="submit" class="btn btn-primary">Send</button>
        </form>
    </div>
    <div class="chat-circle" id="chat-circle">
        <i class="bi bi-robot"></i>
    </div>
</div>

{% block javascripts %}
    {{ parent() }}
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.querySelectorAll('.delete-collaboration').forEach(button => {
            button.addEventListener('click', function(e) {
                e.preventDefault();
                const form = this.closest('form');
                const name = form.dataset.collaborationName;
                const collaborationId = form.getAttribute('action').split('/').pop(); // Get the collaboration ID
                const csrfToken = form.querySelector('input[name="_token"]').value; // Get CSRF token
                const row = this.closest('tr'); // Get the row to remove after delete

                // Show SweetAlert confirmation
                Swal.fire({
                    title: 'Êtes-vous sûr ?',
                    html: `Vous êtes sur le point de supprimer la collaboration <strong>${name}</strong>.<br>Cette action est irréversible !`,
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Oui, supprimer',
                    cancelButtonText: 'Annuler',
                    reverseButtons: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    showClass: {
                        popup: 'animate__animated animate__fadeInDown'
                    },
                    hideClass: {
                        popup: 'animate__animated animate__fadeOutUp'
                    }
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Create FormData to send with the request
                        const formData = new FormData();
                        formData.append('_token', csrfToken); // Add CSRF token to the FormData

                        // Perform the AJAX request to delete the collaboration
                        fetch(`/collaboration/delete/${collaborationId}`, {
                            method: 'POST',
                            body: formData
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.status === 'success') {
                                // If successful, remove the row from the table
                                Swal.fire(
                                    'Supprimé!',
                                    `La collaboration <strong>${name}</strong> a été supprimée.`,
                                    'success'
                                ).then(() => {
                                    row.remove(); // Remove the collaboration row
                                });
                            } else {
                                Swal.fire(
                                    'Erreur!',
                                    'Une erreur est survenue lors de la suppression.',
                                    'error'
                                );
                            }
                        })
                        .catch(error => {
                            Swal.fire(
                                'Erreur!',
                                'Une erreur est survenue lors de la suppression.',
                                'error'
                            );
                        });
                    }
                });
            });
        });

        // Fade out alerts after 5 seconds
        document.querySelectorAll('.alert').forEach(alert => {
            setTimeout(() => {
                alert.classList.add('fade');
                setTimeout(() => alert.remove(), 500);
            }, 5000);
        });
        document.querySelectorAll('.delete-project').forEach(button => {
        button.addEventListener('click', function(e) {
            e.preventDefault();
            const form = this.closest('form');
            const name = form.dataset.projectName;
            const projectId = form.getAttribute('action').split('/').pop(); // Get the project ID
            const csrfToken = form.querySelector('input[name="_token"]').value; // Get CSRF token
            const row = this.closest('tr'); // Get the row to remove after delete

            // Show SweetAlert confirmation
            Swal.fire({
                title: 'Êtes-vous sûr ?',
                html: `Vous êtes sur le point de supprimer le projet <strong>${name}</strong>.<br>Cette action est irréversible !`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Oui, supprimer',
                cancelButtonText: 'Annuler',
                reverseButtons: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                showClass: {
                    popup: 'animate__animated animate__fadeInDown'
                },
                hideClass: {
                    popup: 'animate__animated animate__fadeOutUp'
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    // Create FormData to send with the request
                    const formData = new FormData();
                    formData.append('_token', csrfToken); // Add CSRF token to the FormData

                    // Perform the AJAX request to delete the project
                    fetch(`/project/delete/${projectId}`, {
                        method: 'POST',
                        body: formData
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.status === 'success') {
                            // If successful, remove the row from the table
                            Swal.fire(
                                'Supprimé!',
                                `Le projet <strong>${name}</strong> a été supprimé.`,
                                'success'
                            ).then(() => {
                                row.remove(); // Remove the project row
                            });
                        } else {
                            Swal.fire(
                                'Erreur!',
                                'Une erreur est survenue lors de la suppression.',
                                'error'
                            );
                        }
                    })
                    .catch(error => {
                        Swal.fire(
                            'Erreur!',
                            'Une erreur est survenue lors de la suppression.',
                            'error'
                        );
                    });
                }
            });
        });
    });

    </script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
    var ctx = document.getElementById('collaborationChart').getContext('2d');
    var collaborationChart = new Chart(ctx, {
        type: 'bar',  // Bar chart
        data: {
            labels: {{ collaborationNames|json_encode()|raw }},  // Collaboration names (X-axis labels)
            datasets: [{
                label: 'Project-to-Collaboration Ratio',
                data: {{ ratios|json_encode()|raw }},  // Ratios (Y-axis data)
                backgroundColor: 'rgba(54, 162, 235, 0.2)',  // Bar color
                borderColor: 'rgba(54, 162, 235, 1)',  // Bar border color
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
    </script>
    <script>

    document.getElementById('chat-circle').onclick = function () {
        document.getElementById('chat-box').classList.toggle('hidden');
    };

    document.getElementById('close-chat').onclick = function () {
        document.getElementById('chat-box').classList.add('hidden');
    };

    document.getElementById('chat-form').onsubmit = async function (e) {
        e.preventDefault();
        const form = e.target;
        const formData = new FormData(form);
        const chatContent = document.getElementById('chat-content');
        
        chatContent.innerHTML += `<div class="user-message"><strong>You:</strong> ${formData.get('question')}</div>`;
        form.reset();

        const response = await fetch(form.action, {
            method: form.method,
            body: formData
        });

        const data = await response.json();
        chatContent.innerHTML += `<div class="bot-message"><strong>Bot:</strong> ${data.response}</div>`;
        chatContent.scrollTop = chatContent.scrollHeight;
    }
</script>

<style>
    .chat-circle {
        width: 70px;
        height: 70px;
        background-color: #007bff;
        border-radius: 50%;
        position: fixed;
        bottom: 20px;
        right: 20px;
        display: flex;
        justify-content: center;
        align-items: center;
        box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);
        cursor: pointer;
    }

    .bot-icon {
        width: 50px;
        height: 50px;
    }

    .chat-box {
        width: 350px;
        height: 400px;
        background-color: #f1f1f1;
        position: fixed;
        bottom: 100px;
        right: 20px;
        border: 1px solid #ccc;
        border-radius: 10px;
        box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);
        overflow: hidden;
        display: flex;
        flex-direction: column;
    }

    .chat-header {
        background-color: #007bff;
        color: white;
        padding: 10px;
        text-align: center;
        font-weight: bold;
        position: relative;
    }

    #close-chat {
        position: absolute;
        right: 10px;
        top: 5px;
        cursor: pointer;
        font-size: 20px;
    }

    .chat-content {
        flex: 1;
        padding: 10px;
        overflow-y: auto;
        background: #ffffff;
    }

    .chat-form {
        display: flex;
        padding: 10px;
        border-top: 1px solid #ccc;
        background: #ffffff;
    }

    .chat-form input {
        flex: 1;
        margin-right: 10px;
    }

    .hidden {
        display: none;
    }

    .user-message, .bot-message {
        margin: 5px 0;
        padding: 8px;
        border-radius: 10px;
        background: #e9ecef;
    }
</style>


{% endblock %}
{% endblock %}

{% extends 'base1.html.twig' %}

{% block name %}Project{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .form-container {
            margin-left: 280px;
            padding: 2rem;
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            min-height: 100vh;
        }

        .form-card {
            background: white;
            border-radius: 20px;
            padding: 2rem;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
            border: 1px solid rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            max-width: 1000px;
            margin: 0 auto;
        }

        .card-header {
            padding-bottom: 1.5rem;
            margin-bottom: 2rem;
            border-bottom: 1px solid #e9ecef;
        }

        .card-title {
            font-size: 1.75rem;
            font-weight: 700;
            background: linear-gradient(135deg, #2c3e50 0%, #3498db 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            margin-bottom: 0.5rem;
        }

        .card-subtitle {
            color: #6c757d;
            font-size: 1rem;
        }

        /* Form Styling */
        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-label {
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 0.5rem;
            display: block;
        }

        .form-control {
            border: 2px solid #e9ecef;
            border-radius: 12px;
            padding: 0.75rem 1rem;
            transition: all 0.3s ease;
            font-size: 0.95rem;
        }

        .form-control:focus {
            border-color: #6B73FF;
            box-shadow: 0 0 0 0.2rem rgba(107, 115, 255, 0.25);
        }

        textarea.form-control {
            min-height: 120px;
            resize: vertical;
        }

        /* Image Upload Styling */
        .image-upload-container {
            text-align: center;
            margin-bottom: 2rem;
            padding: 2rem;
            border: 2px dashed #e9ecef;
            border-radius: 15px;
            transition: all 0.3s ease;
        }

        .image-upload-container:hover {
            border-color: #6B73FF;
            background: rgba(107, 115, 255, 0.05);
        }

        .image-preview {
            max-width: 200px;
            max-height: 200px;
            margin-bottom: 1rem;
            border-radius: 10px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            display: none;
        }

        .image-upload-label {
            cursor: pointer;
            padding: 0.75rem 1.5rem;
            background: linear-gradient(135deg, #6B73FF 0%, #000DFF 100%);
            color: white;
            border-radius: 12px;
            display: inline-block;
            transition: all 0.3s ease;
        }

        .image-upload-label:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(107, 115, 255, 0.3);
        }

        .image-upload-input {
            display: none;
        }

        /* Date Inputs */
        input[type="date"] {
            -webkit-appearance: none;
            appearance: none;
            background: white;
            padding: 0.75rem 1rem;
            border: 2px solid #e9ecef;
            border-radius: 12px;
            font-family: inherit;
            font-size: 0.95rem;
            cursor: pointer;
        }

        /* Submit Button */
        .btn-submit {
            background: linear-gradient(135deg, #6B73FF 0%, #000DFF 100%);
            color: white;
            border: none;
            padding: 1rem 2rem;
            border-radius: 12px;
            font-weight: 600;
            font-size: 1rem;
            transition: all 0.3s ease;
            width: 100%;
            margin-top: 1rem;
            box-shadow: 0 4px 15px rgba(107, 115, 255, 0.2);
        }

        .btn-submit:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(107, 115, 255, 0.3);
        }

        /* Form Grid */
        .form-grid {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 1.5rem;
        }

        @media (max-width: 768px) {
            .form-grid {
                grid-template-columns: 1fr;
            }

            .form-container {
                margin-left: 0;
                padding: 1rem;
            }
        }

        /* Error Styling */
        .form-error {
            color: #dc3545;
            font-size: 0.875rem;
            margin-top: 0.5rem;
        }

        /* Alert Styling */
        .alert {
            padding: 1rem;
            margin-bottom: 1.5rem;
            border: none;
            border-radius: 12px;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            animation: slideIn 0.5s ease-out;
        }

        .alert-success {
            background: linear-gradient(135deg, rgba(0, 183, 74, 0.1) 0%, rgba(0, 183, 74, 0.2) 100%);
            color: #00b74a;
        }

        .alert-danger {
            background: linear-gradient(135deg, rgba(249, 49, 84, 0.1) 0%, rgba(249, 49, 84, 0.2) 100%);
            color: #f93154;
        }

        @keyframes slideIn {
            from {
                transform: translateY(-100%);
                opacity: 0;
            }
            to {
                transform: translateY(0);
                opacity: 1;
            }
        }
    </style>
{% endblock %}

{% block body %}
<div class="form-container">
    <!-- Add Alert Section with specific error messages -->
    {% for type, messages in app.flashes %}
        {% for message in messages %}
            <div class="alert alert-{{ type }} alert-dismissible fade show" role="alert">
                <i class="bi {{ type == 'success' ? 'bi-check-circle' : 'bi-exclamation-triangle' }} me-2"></i>
                {% if type == 'error' %}
                    <strong>Erreur:</strong> 
                {% elseif type == 'success' %}
                    <strong>Succès:</strong> 
                {% endif %}
                {{ message }}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        {% endfor %}
    {% endfor %}

    <!-- Form validation errors -->
    {% if form_errors(form) %}
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle me-2"></i>
            <strong>Erreurs de validation:</strong>
            <ul class="mb-0 mt-2">
                {{ form_errors(form) }}
                {% for child in form.children %}
                    {% if child.vars.errors|length > 0 %}
                        <li>{{ child.vars.label }}: {{ child.vars.errors|join(', ') }}</li>
                    {% endif %}
                {% endfor %}
            </ul>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    {% endif %}

    <div class="form-card">
        <div class="card-header">
            <h3 class="card-title">Nouveau Projet</h3>
            <p class="card-subtitle">Créez un nouveau projet en remplissant le formulaire ci-dessous</p>
        </div>

        {{ form_start(form, {'attr': {'class': 'needs-validation', 'novalidate': 'novalidate', 'enctype': 'multipart/form-data'}}) }}
            <div class="image-upload-container">
                <img id="imagePreview" class="image-preview" alt="Preview">
                <label class="image-upload-label">
                    <i class="bi bi-cloud-upload me-2"></i>Choisir une image
                    {{ form_widget(form.image, {'attr': {
                        'class': 'image-upload-input',
                        'accept': 'image/*',
                        'onchange': 'previewImage(this)'
                    }}) }}
                </label>
                {{ form_errors(form.image) }}
            </div>

            <div class="form-grid">
                <div class="form-group">
                    {{ form_label(form.title, 'Titre du projet', {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.title, {'attr': {'class': 'form-control', 'placeholder': 'Entrez le titre'}}) }}
                    {{ form_errors(form.title) }}
                </div>

                <div class="form-group">
                    {{ form_label(form.collaboration, 'Collaboration', {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.collaboration, {'attr': {'class': 'form-control'}}) }}
                    {{ form_errors(form.collaboration) }}
                </div>

                <div class="form-group">
                    {{ form_label(form.startDate, 'Date de début', {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.startDate, {'attr': {'class': 'form-control'}}) }}
                    {{ form_errors(form.startDate) }}
                </div>

                <div class="form-group">
                    {{ form_label(form.endDate, 'Date de fin', {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.endDate, {'attr': {'class': 'form-control'}}) }}
                    {{ form_errors(form.endDate) }}
                </div>

                <div class="form-group">
                    {{ form_label(form.budget, 'Budget', {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(form.budget, {'attr': {'class': 'form-control', 'placeholder': 'Entrez le budget'}}) }}
                    {{ form_errors(form.budget) }}
                </div>
            </div>

            <div class="form-group">
                {{ form_label(form.description, 'Description', {'label_attr': {'class': 'form-label'}}) }}
                {{ form_widget(form.description, {'attr': {'class': 'form-control', 'placeholder': 'Entrez la description'}}) }}
                {{ form_errors(form.description) }}
            </div>
        {{ form_end(form) }}
    </div>
</div>

{% block javascripts %}
    {{ parent() }}
    <script>
        function previewImage(input) {
            const preview = document.getElementById('imagePreview');
            const file = input.files[0];
            const reader = new FileReader();

            reader.onloadend = function() {
                preview.src = reader.result;
                preview.style.display = 'block';
            }

            if (file) {
                reader.readAsDataURL(file);
            } else {
                preview.src = '';
                preview.style.display = 'none';
            }
        }

        // Add form submission handling
        document.querySelector('form').addEventListener('submit', function(e) {
            e.preventDefault();
            this.submit();
        });

        // Enhanced alert auto-dismiss functionality
        document.querySelectorAll('.alert').forEach(alert => {
            // Add slide-in animation
            alert.style.animation = 'slideIn 0.5s ease-out';
            
            // Auto-dismiss after 5 seconds
            setTimeout(() => {
                alert.classList.add('fade');
                setTimeout(() => alert.remove(), 500);
            }, 5000);

            // Manual dismiss
            alert.querySelector('.btn-close')?.addEventListener('click', () => {
                alert.classList.add('fade');
                setTimeout(() => alert.remove(), 500);
            });
        });
    </script>
{% endblock %}
{% endblock %}
